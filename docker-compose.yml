version: "3.6" 
services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeperQM
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - QM_network
      - QM_db
      - kafka_network

  kafka1:
    image: bitnami/kafka:3.3.1
    container_name: kafkaQM
    ports:
      - '9093:9093'
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka1:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    networks:
      - QM_network
      - QM_db
      - kafka_network

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdropQM
    ports:
      - 9000:9000
    environment:
      - KAFKA_BROKERCONNECT=kafka1:9092
    depends_on:
      - kafka1
    networks:
      - QM_network
      - QM_db
      - kafka_network

  influxdb:
    image: influxdb:latest
    container_name: influxdbQM
    ports:
      - "8083:8083"
      - "8086:8086"
      - "8090:8090"
    depends_on:
      - zookeeper
      - kafka1
    environment:
      DOCKER_INFLUXDB_INIT_USERNAME: Rahma
      DOCKER_INFLUXDB_INIT_PASSWORD: rahma1234
      DOCKER_INFLUXDB_INIT_ORG: OstProject
      DOCKER_INFLUXDB_INIT_BUCKET: BloodPressure
    networks:
      - QM_network
      - QM_db
      - kafka_network


  # telegraf:
  #   image: telegraf:latest
  #   container_name: telegrafQM
  #   depends_on:
  #     - zookeeper
  #     - influxdb
  #     - kafka1
  #   restart: unless-stopped
  #   networks:
  #     - QM_network
  #     - QM_db
  #     - kafka_network
  #   volumes:
  #     - C:/Users/DELL5490/Desktop/Master2/SM_OST/telegraf.conf:ro

  grafana:
    container_name: grafanaQM
    image: grafana/grafana-oss:9.1.8
    ports:
      - 3000:3000
    restart: always
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    networks:
      - QM_network
      - QM_db
      - kafka_network

  spark:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - '8080:8080'
    networks:
      - QM_network
      - QM_db
      - kafka_network
      
  spark-worker:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    networks:
      - QM_network
      - QM_db
      - kafka_network

networks:
  QM_db:
    driver: bridge

  kafka_network:
    driver: bridge

  QM_network:
    driver: bridge
